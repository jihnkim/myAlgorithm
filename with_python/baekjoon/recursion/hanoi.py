"""
11729

세 개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여 있다. 각 원판은 반경이 큰 순서대로 쌓여있다. 이제 수도승들이 다음 규칙에 따라 첫 번째 장대에서 세 번째 장대로 옮기려 한다.

한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있다.
쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다.
이 작업을 수행하는데 필요한 이동 순서를 출력하는 프로그램을 작성하라. 단, 이동 횟수는 최소가 되어야 한다.

아래 그림은 원판이 5개인 경우의 예시이다.

입력
첫째 줄에 첫 번째 장대에 쌓인 원판의 개수 N (1 ≤ N ≤ 20)이 주어진다.

출력
첫째 줄에 옮긴 횟수 K를 출력한다.

두 번째 줄부터 수행 과정을 출력한다. 두 번째 줄부터 K개의 줄에 걸쳐 두 정수 A B를 빈칸을 사이에 두고 출력하는데, 이는 A번째 탑의 가장 위에 있는 원판을 B번째 탑의 가장 위로 옮긴다는 뜻이다.

"""
'''
출력 결과

1번 원반을 1에서 3로 이동
2번 원반을 1에서 2로 이동
1번 원반을 3에서 2로 이동
3번 원반을 1에서 3로 이동
1번 원반을 2에서 1로 이동
2번 원반을 2에서 3로 이동
1번 원반을 1에서 3로 이동
총 이동 횟수: 7
'''
# 이해하는데 좀 걸렸다 ..
# 한달 뒤에 한번 더 풀어보기

n = int(input())

def hanoi(n, start, destination, via):
    if n == 1:
        print(start, destination)
        return 1

    cnt = 0
    # 첫 기둥의 밑판 제외 n-1 개의 원판 모두를 보조 기둥으로 이동(1 > 2 > 3)
    cnt += hanoi(n - 1, start, via, destination)

    # 맨 밑 가장 큰 원판을 도착 기둥으로 이동
    cnt += 1
    print(start, destination)

    # 보조기둥에 두었던 n-1 개 원판을 도착 기둥으로 이동(2 > 3 > 1)
    cnt += hanoi(n-1, via, destination, start)
    
    return cnt

# (n, cnt) > (1, 1) (2, 3) (3, 7) (4, 15) .. 실제 점화식도 2^n - 1 꼴 임
print(2**n - 1)
hanoi(n, 1, 3, 2)